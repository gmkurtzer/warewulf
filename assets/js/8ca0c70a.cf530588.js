(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{119:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=i.a.createContext({}),u=function(e){var t=i.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return i.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),s=u(n),p=r,m=s["".concat(c,".").concat(p)]||s[p]||b[p]||l;return n?i.a.createElement(m,a(a({ref:t},d),{},{components:n})):i.a.createElement(m,a({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,c=new Array(l);c[0]=p;var a={};for(var o in t)hasOwnProperty.call(t,o)&&(a[o]=t[o]);a.originalType=e,a.mdxType="string"==typeof e?e:r,c[1]=a;for(var d=2;d<l;d++)c[d]=n[d];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},99:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return a})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return u}));var r=n(3),i=n(7),l=(n(0),n(119)),c={id:"profile",title:"wwctl profile"},a={unversionedId:"wwctl/profile",id:"wwctl/profile",isDocsHomePage:!1,title:"wwctl profile",description:"Management of node profile settings",source:"@site/docs/wwctl/profile.md",slug:"/wwctl/profile",permalink:"/warewulf/docs/wwctl/profile",editUrl:"https://github.com/ctrliq/warewulf/edit/main/docs/docs/wwctl/profile.md",version:"current",sidebar:"someSidebar",previous:{title:"wwctl power",permalink:"/warewulf/docs/wwctl/power"},next:{title:"wwctl ready",permalink:"/warewulf/docs/wwctl/ready"}},o=[{value:"add",id:"add",children:[]},{value:"delete",id:"delete",children:[]},{value:"list",id:"list",children:[]},{value:"set",id:"set",children:[{value:"--comment",id:"--comment",children:[]},{value:"-C, --container",id:"-c---container",children:[]},{value:"-K, --kernel",id:"-k---kernel",children:[]},{value:"-A, --kernelargs",id:"-a---kernelargs",children:[]},{value:"-c, --cluster",id:"-c---cluster",children:[]},{value:"-P, --ipxe",id:"-p---ipxe",children:[]},{value:"-i, --init",id:"-i---init",children:[]},{value:"--root",id:"--root",children:[]},{value:"-R, --runtime",id:"-r---runtime",children:[]},{value:"-S, --system",id:"-s---system",children:[]},{value:"--ipminetmask",id:"--ipminetmask",children:[]},{value:"--ipmigateway",id:"--ipmigateway",children:[]},{value:"--ipmiuser",id:"--ipmiuser",children:[]},{value:"--ipmipass",id:"--ipmipass",children:[]},{value:"-N, --netdev",id:"-n---netdev",children:[]},{value:"-I, --ipaddr",id:"-i---ipaddr",children:[]},{value:"-M, --netmask",id:"-m---netmask",children:[]},{value:"-G, --gateway",id:"-g---gateway",children:[]},{value:"-H, --hwaddr",id:"-h---hwaddr",children:[]},{value:"--netdel",id:"--netdel",children:[]},{value:"--netdefault",id:"--netdefault",children:[]},{value:"-a, --all",id:"-a---all",children:[]},{value:"-f, --force",id:"-f---force",children:[]}]}],d={toc:o};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Management of node profile settings"),Object(l.b)("h2",{id:"add"},"add"),Object(l.b)("p",null,"This command will add a new node profile."),Object(l.b)("h2",{id:"delete"},"delete"),Object(l.b)("p",null,"This command will delete a node profile."),Object(l.b)("h2",{id:"list"},"list"),Object(l.b)("p",null,"This command will list and show the profile configurations."),Object(l.b)("h2",{id:"set"},"set"),Object(l.b)("p",null,"This command will allow you to set configuration properties for node profiles."),Object(l.b)("h3",{id:"--comment"},"--comment"),Object(l.b)("p",null,"Set a comment for this node"),Object(l.b)("h3",{id:"-c---container"},"-C, --container"),Object(l.b)("p",null,"Set the container (VNFS) for this node"),Object(l.b)("h3",{id:"-k---kernel"},"-K, --kernel"),Object(l.b)("p",null,"Set Kernel version for nodes"),Object(l.b)("h3",{id:"-a---kernelargs"},"-A, --kernelargs"),Object(l.b)("p",null,"Set Kernel argument for nodes"),Object(l.b)("h3",{id:"-c---cluster"},"-c, --cluster"),Object(l.b)("p",null,"Set the node's cluster group"),Object(l.b)("h3",{id:"-p---ipxe"},"-P, --ipxe"),Object(l.b)("p",null,"Set the node's iPXE template name"),Object(l.b)("h3",{id:"-i---init"},"-i, --init"),Object(l.b)("p",null,"Define the init process to boot the container"),Object(l.b)("h3",{id:"--root"},"--root"),Object(l.b)("p",null,"Define the rootfs"),Object(l.b)("h3",{id:"-r---runtime"},"-R, --runtime"),Object(l.b)("p",null,"Set the node's runtime overlay"),Object(l.b)("h3",{id:"-s---system"},"-S, --system"),Object(l.b)("p",null,"Set the node's system overlay"),Object(l.b)("h3",{id:"--ipminetmask"},"--ipminetmask"),Object(l.b)("p",null,"Set the node's IPMI netmask"),Object(l.b)("h3",{id:"--ipmigateway"},"--ipmigateway"),Object(l.b)("p",null,"Set the node's IPMI gateway"),Object(l.b)("h3",{id:"--ipmiuser"},"--ipmiuser"),Object(l.b)("p",null,"Set the node's IPMI username"),Object(l.b)("h3",{id:"--ipmipass"},"--ipmipass"),Object(l.b)("p",null,"Set the node's IPMI password"),Object(l.b)("h3",{id:"-n---netdev"},"-N, --netdev"),Object(l.b)("p",null,"Define the network device to configure"),Object(l.b)("h3",{id:"-i---ipaddr"},"-I, --ipaddr"),Object(l.b)("p",null,"Set the node's network device IP address"),Object(l.b)("h3",{id:"-m---netmask"},"-M, --netmask"),Object(l.b)("p",null,"Set the node's network device netmask"),Object(l.b)("h3",{id:"-g---gateway"},"-G, --gateway"),Object(l.b)("p",null,"Set the node's network device gateway"),Object(l.b)("h3",{id:"-h---hwaddr"},"-H, --hwaddr"),Object(l.b)("p",null,"Set the node's network device HW address"),Object(l.b)("h3",{id:"--netdel"},"--netdel"),Object(l.b)("p",null,"Delete the node's network device"),Object(l.b)("h3",{id:"--netdefault"},"--netdefault"),Object(l.b)("p",null,"Set this network to be default"),Object(l.b)("h3",{id:"-a---all"},"-a, --all"),Object(l.b)("p",null,"Set all profiles"),Object(l.b)("h3",{id:"-f---force"},"-f, --force"),Object(l.b)("p",null,"Force configuration (even on error)"))}u.isMDXComponent=!0}}]);