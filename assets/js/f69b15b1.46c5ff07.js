(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{113:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return d})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var l=n(3),i=n(7),r=(n(0),n(119)),d={id:"node",title:"wwctl node"},o={unversionedId:"wwctl/node",id:"wwctl/node",isDocsHomePage:!1,title:"wwctl node",description:"Management of node settings",source:"@site/docs/wwctl/node.md",slug:"/wwctl/node",permalink:"/warewulf/docs/wwctl/node",editUrl:"https://github.com/ctrliq/warewulf/edit/main/docs/docs/wwctl/node.md",version:"current",sidebar:"someSidebar",previous:{title:"wwctl kernel",permalink:"/warewulf/docs/wwctl/kernel"},next:{title:"wwctl overlay",permalink:"/warewulf/docs/wwctl/overlay"}},c=[{value:"add",id:"add",children:[{value:"-g, --group",id:"-g---group",children:[]},{value:"-c, --controller",id:"-c---controller",children:[]},{value:"-N, --netdevDefine",id:"-n---netdevdefine",children:[]},{value:"-I, --ipaddrSet",id:"-i---ipaddrset",children:[]},{value:"-M, --netmaskSet",id:"-m---netmaskset",children:[]},{value:"-G, --gatewaySet",id:"-g---gatewayset",children:[]},{value:"-H, --hwaddrSet",id:"-h---hwaddrset",children:[]},{value:"--discoverable",id:"--discoverable",children:[]}]},{value:"console",id:"console",children:[]},{value:"delete",id:"delete",children:[{value:"-f, --force",id:"-f---force",children:[]},{value:"-g, --group",id:"-g---group-1",children:[]},{value:"-c, --controller",id:"-c---controller-1",children:[]}]},{value:"list",id:"list",children:[{value:"-n, --net",id:"-n---net",children:[]},{value:"-i, --ipmi",id:"-i---ipmi",children:[]},{value:"-a, --all",id:"-a---all",children:[]},{value:"-l, --long",id:"-l---long",children:[]}]},{value:"sensors",id:"sensors",children:[{value:"-F, --full",id:"-f---full",children:[]}]},{value:"set",id:"set",children:[{value:"--comment",id:"--comment",children:[]},{value:"-C, --container",id:"-c---container",children:[]},{value:"-K, --kernel",id:"-k---kernel",children:[]},{value:"-A, --kernelargs",id:"-a---kernelargs",children:[]},{value:"-c, --cluster",id:"-c---cluster",children:[]},{value:"-P, --ipxe",id:"-p---ipxe",children:[]},{value:"-i, --init",id:"-i---init",children:[]},{value:"--root",id:"--root",children:[]},{value:"-R, --runtime",id:"-r---runtime",children:[]},{value:"-S, --system",id:"-s---system",children:[]},{value:"--ipmi",id:"--ipmi",children:[]},{value:"--ipminetmask",id:"--ipminetmask",children:[]},{value:"--ipmigateway",id:"--ipmigateway",children:[]},{value:"--ipmiuser",id:"--ipmiuser",children:[]},{value:"--ipmipass",id:"--ipmipass",children:[]},{value:"-p, --addprofile",id:"-p---addprofile",children:[]},{value:"-r, --delprofile",id:"-r---delprofile",children:[]},{value:"-N, --netdev",id:"-n---netdev",children:[]},{value:"-I, --ipaddr",id:"-i---ipaddr",children:[]},{value:"-M, --netmask",id:"-m---netmask",children:[]},{value:"-G, --gateway",id:"-g---gateway",children:[]},{value:"-H, --hwaddr",id:"-h---hwaddr",children:[]},{value:"--netdel",id:"--netdel",children:[]},{value:"--netdefault",id:"--netdefault",children:[]},{value:"-a, --all",id:"-a---all-1",children:[]},{value:"-y, --yes",id:"-y---yes",children:[]},{value:"-f, --force",id:"-f---force-1",children:[]},{value:"--discoverable",id:"--discoverable-1",children:[]},{value:"--undiscoverable",id:"--undiscoverable",children:[]}]}],a={toc:c};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(l.a)({},a,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Management of node settings"),Object(r.b)("h2",{id:"add"},"add"),Object(r.b)("p",null,"This command will add a new node to Warewulf."),Object(r.b)("h3",{id:"-g---group"},"-g, --group"),Object(r.b)("p",null,"Group to add nodes to"),Object(r.b)("h3",{id:"-c---controller"},"-c, --controller"),Object(r.b)("p",null,"Controller to add nodes to"),Object(r.b)("h3",{id:"-n---netdevdefine"},"-N, --netdevDefine"),Object(r.b)("p",null,"the network device to configure"),Object(r.b)("h3",{id:"-i---ipaddrset"},"-I, --ipaddrSet"),Object(r.b)("p",null,"the node's network device IP address"),Object(r.b)("h3",{id:"-m---netmaskset"},"-M, --netmaskSet"),Object(r.b)("p",null,"the node's network device netmask"),Object(r.b)("h3",{id:"-g---gatewayset"},"-G, --gatewaySet"),Object(r.b)("p",null,"the node's network device gateway"),Object(r.b)("h3",{id:"-h---hwaddrset"},"-H, --hwaddrSet"),Object(r.b)("p",null,"the node's network device HW address"),Object(r.b)("h3",{id:"--discoverable"},"--discoverable"),Object(r.b)("p",null,"Make this node discoverable"),Object(r.b)("h2",{id:"console"},"console"),Object(r.b)("p",null,"Start IPMI console for a singe node."),Object(r.b)("h2",{id:"delete"},"delete"),Object(r.b)("p",null,"This command will remove a node from the Warewulf node configuration."),Object(r.b)("h3",{id:"-f---force"},"-f, --force"),Object(r.b)("p",null,"Force node delete"),Object(r.b)("h3",{id:"-g---group-1"},"-g, --group"),Object(r.b)("p",null,"Set group to delete nodes from"),Object(r.b)("h3",{id:"-c---controller-1"},"-c, --controller"),Object(r.b)("p",null,"Controller to add nodes to"),Object(r.b)("h2",{id:"list"},"list"),Object(r.b)("p",null,"This command will show you configured nodes."),Object(r.b)("h3",{id:"-n---net"},"-n, --net"),Object(r.b)("p",null,"Show node network configurations"),Object(r.b)("h3",{id:"-i---ipmi"},"-i, --ipmi"),Object(r.b)("p",null,"Show node IPMI configurations"),Object(r.b)("h3",{id:"-a---all"},"-a, --all"),Object(r.b)("p",null,"Show all node configurations"),Object(r.b)("h3",{id:"-l---long"},"-l, --long"),Object(r.b)("p",null,"Show long or wide format"),Object(r.b)("h2",{id:"sensors"},"sensors"),Object(r.b)("p",null,"Show IPMI sensors for a single node."),Object(r.b)("h3",{id:"-f---full"},"-F, --full"),Object(r.b)("p",null,"show detailed output"),Object(r.b)("h2",{id:"set"},"set"),Object(r.b)("p",null,"This command will allow you to set configuration properties for nodes."),Object(r.b)("h3",{id:"--comment"},"--comment"),Object(r.b)("p",null,"Set a comment for this node"),Object(r.b)("h3",{id:"-c---container"},"-C, --container"),Object(r.b)("p",null,"Set the container (VNFS) for this node"),Object(r.b)("h3",{id:"-k---kernel"},"-K, --kernel"),Object(r.b)("p",null,"Set Kernel version for nodes"),Object(r.b)("h3",{id:"-a---kernelargs"},"-A, --kernelargs"),Object(r.b)("p",null,"Set Kernel argument for nodes"),Object(r.b)("h3",{id:"-c---cluster"},"-c, --cluster"),Object(r.b)("p",null,"Set the node's cluster group"),Object(r.b)("h3",{id:"-p---ipxe"},"-P, --ipxe"),Object(r.b)("p",null,"Set the node's iPXE template name"),Object(r.b)("h3",{id:"-i---init"},"-i, --init"),Object(r.b)("p",null,"Define the init process to boot the container"),Object(r.b)("h3",{id:"--root"},"--root"),Object(r.b)("p",null,"Define the rootfs"),Object(r.b)("h3",{id:"-r---runtime"},"-R, --runtime"),Object(r.b)("p",null,"Set the node's runtime overlay"),Object(r.b)("h3",{id:"-s---system"},"-S, --system"),Object(r.b)("p",null,"Set the node's system overlay"),Object(r.b)("h3",{id:"--ipmi"},"--ipmi"),Object(r.b)("p",null,"Set the node's IPMI IP address"),Object(r.b)("h3",{id:"--ipminetmask"},"--ipminetmask"),Object(r.b)("p",null,"Set the node's IPMI netmask"),Object(r.b)("h3",{id:"--ipmigateway"},"--ipmigateway"),Object(r.b)("p",null,"Set the node's IPMI gateway"),Object(r.b)("h3",{id:"--ipmiuser"},"--ipmiuser"),Object(r.b)("p",null,"Set the node's IPMI username"),Object(r.b)("h3",{id:"--ipmipass"},"--ipmipass"),Object(r.b)("p",null,"Set the node's IPMI password"),Object(r.b)("h3",{id:"-p---addprofile"},"-p, --addprofile"),Object(r.b)("p",null,"Add Profile(s) to node"),Object(r.b)("h3",{id:"-r---delprofile"},"-r, --delprofile"),Object(r.b)("p",null,"Remove Profile(s) to node"),Object(r.b)("h3",{id:"-n---netdev"},"-N, --netdev"),Object(r.b)("p",null,"Define the network device to configure"),Object(r.b)("h3",{id:"-i---ipaddr"},"-I, --ipaddr"),Object(r.b)("p",null,"Set the node's network device IP address"),Object(r.b)("h3",{id:"-m---netmask"},"-M, --netmask"),Object(r.b)("p",null,"Set the node's network device netmask"),Object(r.b)("h3",{id:"-g---gateway"},"-G, --gateway"),Object(r.b)("p",null,"Set the node's network device gateway"),Object(r.b)("h3",{id:"-h---hwaddr"},"-H, --hwaddr"),Object(r.b)("p",null,"Set the node's network device HW address"),Object(r.b)("h3",{id:"--netdel"},"--netdel"),Object(r.b)("p",null,"Delete the node's network device"),Object(r.b)("h3",{id:"--netdefault"},"--netdefault"),Object(r.b)("p",null,"Set this network to be default"),Object(r.b)("h3",{id:"-a---all-1"},"-a, --all"),Object(r.b)("p",null,"Set all nodes"),Object(r.b)("h3",{id:"-y---yes"},"-y, --yes"),Object(r.b)("p",null,"Set 'yes' to all questions asked"),Object(r.b)("h3",{id:"-f---force-1"},"-f, --force"),Object(r.b)("p",null,"Force configuration (even on error)"),Object(r.b)("h3",{id:"--discoverable-1"},"--discoverable"),Object(r.b)("p",null,"Make this node discoverable"),Object(r.b)("h3",{id:"--undiscoverable"},"--undiscoverable"),Object(r.b)("p",null,"Remove the discoverable flag"))}b.isMDXComponent=!0},119:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var l=n(0),i=n.n(l);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,l,i=function(e,t){if(null==e)return{};var n,l,i={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=i.a.createContext({}),b=function(e){var t=i.a.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=b(e.components);return i.a.createElement(a.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=i.a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,a=c(e,["components","mdxType","originalType","parentName"]),u=b(n),p=l,h=u["".concat(d,".").concat(p)]||u[p]||s[p]||r;return n?i.a.createElement(h,o(o({ref:t},a),{},{components:n})):i.a.createElement(h,o({ref:t},a))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,d=new Array(r);d[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,d[1]=o;for(var a=2;a<r;a++)d[a]=n[a];return i.a.createElement.apply(null,d)}return i.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);