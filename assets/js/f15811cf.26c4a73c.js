(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{111:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return l}));var r=n(3),o=n(7),a=(n(0),n(119)),i={id:"contributing",title:"Contributing"},c={unversionedId:"contributing/contributing",id:"contributing/contributing",isDocsHomePage:!1,title:"Contributing",description:"Warewulf is an open source project, meaning we have the challenge of limited resources. We are grateful for any support that you can offer. Helping other users, raising issues, helping write documentation, or contributing code are all ways to help!",source:"@site/docs/contributing/contributing.md",slug:"/contributing/contributing",permalink:"/warewulf/docs/contributing/contributing",editUrl:"https://github.com/ctrliq/warewulf/edit/main/docs/docs/contributing/contributing.md",version:"current",sidebar:"someSidebar",previous:{title:"wwctl",permalink:"/warewulf/docs/wwctl"},next:{title:"Documentation",permalink:"/warewulf/docs/contributing/documentation"}},u=[{value:"Join the community",id:"join-the-community",children:[{value:"Warewulf Google Group",id:"warewulf-google-group",children:[]},{value:"Warewulf on Slack",id:"warewulf-on-slack",children:[]}]},{value:"Raise an Issue",id:"raise-an-issue",children:[]},{value:"Contribute to the code",id:"contribute-to-the-code",children:[{value:"Step 1. Fork the repo",id:"step-1-fork-the-repo",children:[]},{value:"Step 2. Checkout a new branch",id:"step-2-checkout-a-new-branch",children:[]},{value:"Step 3. Make your changes",id:"step-3-make-your-changes",children:[]},{value:"Step 4. Push your branch to your fork",id:"step-4-push-your-branch-to-your-fork",children:[]},{value:"Step 5. Submit a Pull Request",id:"step-5-submit-a-pull-request",children:[]},{value:"Step 6. Keep your branch in sync",id:"step-6-keep-your-branch-in-sync",children:[]}]}],s={toc:u};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Warewulf is an open source project, meaning we have the challenge of limited resources. We are grateful for any support that you can offer. Helping other users, raising issues, helping write documentation, or contributing code are all ways to help!"),Object(a.b)("h2",{id:"join-the-community"},"Join the community"),Object(a.b)("p",null,"This is a huge endeavor, and your help would be greatly appreciated! Post to online communities about Warewulf, and request that your distribution vendor, service provider, and system administrators include Warewulf for you!"),Object(a.b)("h3",{id:"warewulf-google-group"},"Warewulf Google Group"),Object(a.b)("p",null,"If you have been using Warewulf and having good luck with it, join our ",Object(a.b)("a",{parentName:"p",href:"https://groups.google.com/a/ctrliq.com/forum/#!forum/warewulf"},"Google Group"),"  and help out other users! "),Object(a.b)("h3",{id:"warewulf-on-slack"},"Warewulf on Slack"),Object(a.b)("p",null,"Many of our users come to Slack for quick help with an issue. You can find us at ",Object(a.b)("a",{parentName:"p",href:"https://join.slack.com/t/hpcng/shared_invite/zt-k9atb2dj-rnlPjSh5Os3Ks6vlDEOyAA"},"HPCng"),"."),Object(a.b)("h2",{id:"raise-an-issue"},"Raise an Issue"),Object(a.b)("p",null,"For general bugs/issues, you can open an issue ",Object(a.b)("a",{parentName:"p",href:"https://github.com/ctrliq/warewulf/issues/new"},"at the GitHub repo"),". However, if you find a security  related issue/problem, please email Ctrl IQ directly at ",Object(a.b)("a",{parentName:"p",href:"mailto:security@ctrliq.com"},"security@ctrliq.com"),". More information about the Ctrl IQ security policies and procedures can be found ",Object(a.b)("a",{parentName:"p",href:"https://ctrliq.com/warewulf/security-policy"},"here"),"."),Object(a.b)("h2",{id:"contribute-to-the-code"},"Contribute to the code"),Object(a.b)("p",null,"We use the traditional ",Object(a.b)("a",{parentName:"p",href:"https://guides.github.com/introduction/flow"},"GitHub Flow")," to develop. This means that you fork the main repo, create a new branch to make changes, and submit a pull request (PR) to the master branch."),Object(a.b)("p",null,"Check out our official ",Object(a.b)("a",{parentName:"p",href:"https://github.com/ctrliq/warewulf/blob/master/CONTRIBUTING.md"},"CONTRIBUTING.md")," document, which also includes a ",Object(a.b)("a",{parentName:"p",href:"https://github.com/ctrliq/warewulf/blob/master/CONTRIBUTING.md#code-of-conduct"},"code of conduct"),"."),Object(a.b)("h3",{id:"step-1-fork-the-repo"},"Step 1. Fork the repo"),Object(a.b)("p",null,"To contribute to Warewulf, you should obtain a GitHub account and fork the ",Object(a.b)("a",{parentName:"p",href:"https://github.com/ctrliq/warewulf"},"Warewulf")," repository. Once forked, clone your fork of the repo to your computer. (Obviously, you should replace ",Object(a.b)("inlineCode",{parentName:"p"},"your-username")," with your GitHub username.)"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/your-username/warewulf.git\ncd warewulf\n")),Object(a.b)("h3",{id:"step-2-checkout-a-new-branch"},"Step 2. Checkout a new branch"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://guides.github.com/introduction/flow"},"Branches")," are a way of\nisolating your features from the main branch. Given that we\u2019ve just cloned the\nrepo, we will probably want to make a new branch from master in which to work on\nour new feature. Lets call that branch ",Object(a.b)("inlineCode",{parentName:"p"},"new-feature"),":"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"git checkout master\ngit checkout -b new-feature\n")),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",{parentName:"div",className:"admonition-heading"},Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",{parentName:"h5",className:"admonition-icon"},Object(a.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(a.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(a.b)("div",{parentName:"div",className:"admonition-content"},Object(a.b)("p",{parentName:"div"},"You can always check which branch you are in by running ",Object(a.b)("inlineCode",{parentName:"p"},"git branch"),"."))),Object(a.b)("h3",{id:"step-3-make-your-changes"},"Step 3. Make your changes"),Object(a.b)("p",null,"On your new branch, go nuts! Make changes, test them, and when you are happy commit the changes to the branch:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},'git add file-changed1 file-changed2...\ngit commit -m "what changed?"\n')),Object(a.b)("p",null,"This commit message is important - it should describe exactly the changes that you have made. Good commit messages read like so:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},'git commit -m "changed function getConfig in functions.go to output csv to fix #2"\ngit commit -m "updated docs about shell to close #10"\n')),Object(a.b)("p",null,"The tags ",Object(a.b)("inlineCode",{parentName:"p"},"close #10")," and ",Object(a.b)("inlineCode",{parentName:"p"},"fix #2")," are referencing issues that are posted on the upstream repo where you will direct your pull request. When your PR is merged into the master branch, these messages will automatically close the issues, and further, they will link your commits directly to the issues they intend to fix. This will help future maintainers understand your contribution, or (hopefully not) revert the code back to a previous version if necessary."),Object(a.b)("h3",{id:"step-4-push-your-branch-to-your-fork"},"Step 4. Push your branch to your fork"),Object(a.b)("p",null,"When you are done with your commits, you should push your branch to your fork (and you can also continuously push commits here as you work):"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"git push origin new-feature\n")),Object(a.b)("p",null,"Note that you should always check the status of your branches to see what has been pushed (or not):"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"git status\n")),Object(a.b)("h3",{id:"step-5-submit-a-pull-request"},"Step 5. Submit a Pull Request"),Object(a.b)("p",null,"Once you have pushed your branch, then you can go to your fork (in the web GUI on GitHub) and ",Object(a.b)("a",{parentName:"p",href:"https://help.github.com/articles/creating-a-pull-request"},"submit a Pull Request"),". Regardless of the name of your branch, your PR should be submitted to the Ctrl IQ ",Object(a.b)("inlineCode",{parentName:"p"},"master")," branch. Submitting your PR will open a conversation thread for the maintainers of Warewulf to discuss your contribution. At this time, the continuous integration that is linked with the code base will also be executed. If there is an issue, or if the maintainers suggest changes, you can continue to push commits to your branch and they will update the Pull Request."),Object(a.b)("h3",{id:"step-6-keep-your-branch-in-sync"},"Step 6. Keep your branch in sync"),Object(a.b)("p",null,"Cloning the repo will create an exact copy of the Warewulf repository at that moment. As you work, your branch may become out of date as others merge changesinto the upstream master. In the event that you need to update a branch, you will need to follow the next steps:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},'# add a new remote named "upstream"\ngit remote add upstream https://github.com/ctrliq/warewulf.git\n# or another branch to be updated\ngit checkout master\ngit pull upstream master\n# to update your fork\ngit push origin master\ngit checkout new-feature\ngit merge master\n')))}l.isMDXComponent=!0},119:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),l=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=l(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),b=l(n),p=r,d=b["".concat(i,".").concat(p)]||b[p]||h[p]||a;return n?o.a.createElement(d,c(c({ref:t},s),{},{components:n})):o.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);